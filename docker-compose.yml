version: '3.9'
services:
  admin:
    privileged: true
    container_name: admin
    build: './admin'
    restart: always
    environment:
      - PGUSER=postgres
      - PGPASSWORD=P@ssw0rd
      - PGDATABASE=database
      - PGHOST=core-db
      - PGPORT=5432
    volumes:
      - type: bind 
        source: ./shared   # Add shared utils
        target: /app/shared
        read_only: true
      - /var/run/docker.sock:/var/run/docker.sock

  nginx-gateway:
    container_name: nginx-gateway
    build: './nginx-gateway'
    restart: always
    ports:
      - 80:80
    depends_on:
      - admin
      - http-trigger
      - executor

  core-db:
    container_name: core-db
    build:
      context: ./
      dockerfile: './core-db/Dockerfile'
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=P@ssw0rd
      - POSTGRES_DB=database
    volumes:
      - postgres-data:/var/lib/postgresql/data

  http-trigger:
    container_name: http-trigger
    build: ./http-trigger
    restart: always
    environment:
      - PGUSER=postgres
      - PGPASSWORD=P@ssw0rd
      - PGDATABASE=database
      - PGHOST=core-db
      - PGPORT=5432
    volumes:
      - type: bind 
        source: ./shared   # Add shared utils
        target: /app/shared
        read_only: true
    depends_on:
      - rabbitmq

  executor:
    container_name: executor
    build: ./executor
    restart: always
    environment:
      - PGUSER=postgres
      - PGPASSWORD=P@ssw0rd
      - PGDATABASE=database
      - PGHOST=core-db
      - PGPORT=5432
    volumes:
      - type: bind 
        source: ./shared   # Add shared utils
        target: /app/shared
        read_only: true
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - rabbitmq

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.11-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

volumes:
  postgres-data: